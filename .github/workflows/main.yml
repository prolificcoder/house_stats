name: Complete CI setup for Flutter app
on:
  pull_request:
    branches:
      - master

jobs:
  run-static-checks:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.2"
          channel: "stable"
      - name: check code formatting
        run: dart format . --set-exit-if-changed
      - name: check code linting
        run: flutter analyze .
  run-unit-tests:
    runs-on: ubuntu-latest
    needs: run-static-checks
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.2"
          channel: "stable"
      - name: Run test with coverage
        run: flutter test --coverage
      - name: Enforce code coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          min_coverage: 28
  build-ios-mac-app:
    runs-on: macos-latest
    needs: run-unit-tests
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.2"
          channel: "stable"
      - name: Build the iOS app
        run: flutter build ios --debug --no-codesign
  build-ios-mobile-app:
    runs-on: macos-latest
    needs: run-unit-tests
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.2"
          channel: "stable"
      - name: Build the iOS app
        run: flutter build ipa --debug --no-codesign
  build-android-app:
    runs-on: ubuntu-latest
    needs: run-unit-tests
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.2"
          channel: "stable"
      - name: Build the android app
        run: flutter build apk --debug
  build-web-app:
    runs-on: windows-latest
    needs: run-unit-tests
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.2"
          channel: "stable"
      - name: Build the android app
        run: flutter build web
  run-ios-integration-tests:
    runs-on: macos-latest
    needs:
      [
        build-android-app,
        build-ios-mac-app,
        build-web-app,
        build-ios-mobile-app,
      ]
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.2"
          channel: "stable"
      - uses: futureware-tech/simulator-action@v1
        with:
          model: "iPhone 14"
          erase_before_boot: true
          shutdown_after_job: true
      - name: Run ios integration tests on mac
        run: flutter test integration_test/house_mocked_integration_test.dart --dart-define=isTestApp=true
  run-android-integration-tests:
    runs-on: ubuntu-latest
    needs:
      [
        build-android-app,
        build-ios-mac-app,
        build-web-app,
        build-ios-mobile-app,
      ]
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.2"
          channel: "stable"
      - name: Generate android binaries
        run: |
          pushd android
          flutter build apk --debug
          ./gradlew app:assembleAndroidTest
          ./gradlew app:assembleDebug -Ptarget=integration_test/house_integration_test.dart
          popd
      - name: Run tests on Firebase Test Lab
        uses: asadmansr/Firebase-Test-Lab-Action@v1.0
        with:
          arg-spec: "ftl_config.yml:ftl-config"
        env:
          SERVICE_ACCOUNT: ${{ secrets.FIREBASE_HOUSE_STATS_SERVICE_ACCOUNT }}
